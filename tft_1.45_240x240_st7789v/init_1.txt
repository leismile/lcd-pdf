//======================================================================
// Copyright (c) 2016 by Steward Fu
// All rights reserved
// 2016/11/14
//======================================================================
#include "../include/stc15w4k56s4.h"

#define RST		P54
#define CS		P43
#define SCL		P42
#define WR		P41
#define SDA		P40

#define Command 0
#define Parameter 1

void delayms(unsigned int ms)
{
  unsigned int cnt;
  while(ms--){
    for(cnt=0; cnt<1000; cnt++);
  }
}

void Write(unsigned char flag, unsigned char dat)
{
	int i=0;

	CS = 0;
	SCL = 0;
	SDA = flag;
	SCL = 1;
	for(i=0; i<8; i++){
		SCL = 0;			
		if((dat & 0x80) == 0x80){
			SDA = 1;
		}
		else{
			SDA = 0;
		}
		dat<<= 1;
		SCL = 1;
	}
	CS = 1;

}

void reset(void)
{
	RST = 0;
	delayms(100);
	RST = 1;
	delayms(100);
}

void init(void)
{
	Write(Command, 0x11);
	delayms(120);   
			
	Write(Command, 0x36); //Memory Data Access Control
	Write(Parameter, 0x00); 

	Write(Command, 0x3A); //Interface Pixel Format
	Write(Parameter, 0x05); //MCU-18bit   06

	Write(Command, 0x2a); 
	Write(Parameter, 0x00); 
	Write(Parameter, 0x00); 
	Write(Parameter, 0x00); 
	Write(Parameter, 0xef); 

	Write(Command, 0x2b); 
	Write(Parameter, 0x00); 
	Write(Parameter, 0x00); 
	Write(Parameter, 0x00); 
	Write(Parameter, 0xef);

	Write(Command, 0xb2); //Porch Setting
	Write(Parameter, 0x0C);//Normal BP
	Write(Parameter, 0x0C);//Normal FP
	Write(Parameter, 0x00);//Enable Seperate
	Write(Parameter, 0x33);//idle, BP[7:4], FP[3:0]
	Write(Parameter, 0x33);//partial, BP[7:4], FP[3:0]

	Write(Command, 0xb7); //Gate Control
	Write(Parameter, 0x56); //VGH=14.06V, VGL=-11.38

	Write(Command, 0xbb); //VCOMS Setting
	Write(Parameter, 0x1E); 

	Write(Command ,0xc0); 
	Write(Parameter, 0x2c); 

	Write(Command, 0xc2); 
	Write(Parameter, 0x01);

	Write(Command, 0xc3); //VRH Set
	Write(Parameter, 0x13); //4.5V

	Write(Command, 0xc4); 
	Write(Parameter, 0x20);

	Write(Command, 0xc6); //Frame Rate Control in Normal Mode
	Write(Parameter, 0x0f);

	Write(Command, 0xd0); //Power Control 1
	Write(Parameter, 0xa4); //
	Write(Parameter, 0xa1); //AVDD=6.8V, AVCL=-4.8V, VDS=2.3V

	//----GAMMA------------------------------------

	Write(Command, 0xe0);
	Write(Parameter, 0xD0);
	Write(Parameter, 0x03);
	Write(Parameter, 0x08);
	Write(Parameter, 0x0E);
	Write(Parameter, 0x11);
	Write(Parameter, 0x2B);
	Write(Parameter, 0x3B);
	Write(Parameter, 0x44);
	Write(Parameter, 0x4C);
	Write(Parameter, 0x2B);
	Write(Parameter, 0x16);
	Write(Parameter, 0x15);
	Write(Parameter, 0x1E);
	Write(Parameter, 0x21);

	Write(Command, 0xe1);
	Write(Parameter, 0xD0);
	Write(Parameter, 0x03);
	Write(Parameter, 0x08);
	Write(Parameter, 0x0E);
	Write(Parameter, 0x11);
	Write(Parameter, 0x2B);
	Write(Parameter, 0x3B);
	Write(Parameter, 0x54);
	Write(Parameter, 0x4C);
	Write(Parameter, 0x2B);
	Write(Parameter, 0x16);
	Write(Parameter, 0x15);
	Write(Parameter, 0x1E);
	Write(Parameter, 0x21);

	Write(Command, 0x51);
	Write(Parameter, 0x20);

	Write(Command, 0xe7); 	//DATA
	Write(Parameter, 0x00);

	Write(Command, 0x29);	//Display ON 
}

void color(void)
{
	unsigned int x, y;

	Write(Command, 0x2c); 
	for(y=0; y<240; y++){
		for(x=0; x<240; x++){
			Write(Parameter, 0xf1);
			Write(Parameter, 0x00);
		}
	}
}

void gpio_init(void)
{
  P0M0 = 0x00;
  P0M1 = 0x00;
  P1M0 = 0x00;
  P1M1 = 0x00;
  P2M0 = 0x00;
  P2M1 = 0x00;
  P3M0 = 0x00;
  P3M1 = 0x00;
  P4M0 = 0x00;
  P4M1 = 0x00;
  P5M0 = 0x00;
  P5M1 = 0x00;
}

void main(void)
{
  gpio_init();
  AUXR|= 0x80;

	reset();
  init();
  color();
  while(1){
    P55 = 0;
    delayms(1000);
    P55 = 1;
    delayms(1000);
  }
}

